#include <stdio.h>
#include <stdbool.h>

#define N 10

int board[N][N];

bool isSafe(int row, int col, int n) {
// Check if there is a queen in the same column
for (int i = 0; i < row; i++) {
if (board[i][col] == 1) {
return false;
}
}

// Check if there is a queen in the upper left diagonal
for (int i = row, j = col; i >= 0 && j >= 0; i--, j--) {
if (board[i][j] == 1) {
return false;
}
}
// Check if there is a queen in the upper right diagonal
for (int i = row, j = col; i >= 0 && j < n; i--, j++) {
if (board[i][j] == 1) {
return false;
}
}

return true;
}

void solveNQueens(int row, int n, int *count) {
if (row == n) {
// Print the solution
printf("Solution %d:\n", (*count)++);
for (int i = 0; i < n; i++) {
for (int j = 0; j < n; j++) {
printf("%c ", board[i][j] == 1 ? 'Q' : '.');
}
printf("\n");
}
printf("\n");
return;
}
for (int col = 0; col < n; col++) {
if (isSafe(row, col, n)) {
board[row][col] = 1;
solveNQueens(row + 1, n, count);
board[row][col] = 0;
}
}
}

int main() { 
int n;
printf("Enter the value of n: ");
scanf("%d", &n);

int count = 1;
solveNQueens(0, n, &count);

return 0;
}
